package store

import (
	"fmt"
	"path"
	"alc/model/store"
	"alc/view/layout"
	"alc/config"
)

script HandleProductChange() {
	const productSelect = document.querySelector("#product-id");
	const priceShow = document.querySelector("#store\\:price");
	const stockShow = document.querySelector("#store\\:stock");
	const handler = e => {
		const price = productSelect.querySelector(`option[value='${e.target.value}']`).dataset.price;
		const stock = productSelect.querySelector(`option[value='${e.target.value}']`).dataset.stock;
		priceShow.textContent = price;
		stockShow.textContent = stock;
	}
	productSelect.addEventListener("change", handler);
}

templ Item(item store.Item, products []store.Product) {
	@layout.BasePage(item.Name) {
		<main>
			<div class="grid gap-9 px-4 py-9 max-w-7xl mx-auto lg:grid-cols-[3fr_2fr] lg:gap-12">
				<!-- Navegacion -->
				<div class="font-semibold lg:col-span-2">
					<span>
						<a class="text-navy" href="/store">Tienda</a>
					</span>
					<span>
						<svg class="inline w-3 h-3 pb-[2px] text-livid" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7"></path>
						</svg>
					</span>
					<span class="text-livid">
						<a class="text-navy" href={ templ.URL(path.Join("/store/categories", item.Category.Slug)) }>{ item.Category.Name }</a>
					</span>
					<span>
						<svg class="inline w-3 h-3 pb-[2px] text-livid" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7"></path>
						</svg>
					</span>
					<span class="text-livid">
						{ item.Name }
					</span>
				</div>
				<!-- Imagen -->
				<div class="lg:col-span-1">
					<img
						class="w-full aspect-[7/4] object-cover rounded-3xl shadow-[rgba(0,0,0,0.24)_0px_3px_8px]"
						if item.LargeImg.Id != 0 {
							src={ path.Join(config.IMAGES_PATH, item.LargeImg.Filename) }
							alt={ item.Slug }
						} else {
							src="/static/img/noimage.png"
						}
					/>
				</div>
				<!-- Producto -->
				<div class="space-y-6 lg:col-span-1 lg:row-span-2">
					<h2 class="text-2xl font-bold text-azure lg:text-3xl">{ item.Name }</h2>
					<p>{ item.Description }</p>
					<p id="store:price" class="text-3xl font-semibold text-azure">
						if len(products) >= 1 {
							{ fmt.Sprintf("US$ %.2f", float64(products[0].Price)/100.0) }
						} else {
							No disponible!
						}
					</p>
					<ul class="list-disc list-inside text-sm font-bold">
						<li>Precio incluye el I.G.V</li>
						<li>Precio sujeto a cambios sin previo aviso</li>
						<li>Precio no incluye flete por envío</li>
					</ul>
					<!-- Formulario de compra -->
					<form
						id="new-item-form"
						class="space-y-4"
						hx-post="/cart"
						hx-target="#cart-applet"
						hx-target-error="#error-message"
						hx-on::after-request="if(event.detail.target.id==='cart-applet'){this.querySelector('#quantity').value=1;this.querySelector('#error-message').textContent='';}"
						enctype="application/x-www-form-urlencoded"
						autocomplete="off"
					>
						<div>
							<label class="block my-2 font-bold text-lg text-navy" for="quantity">Cantidad:</label>
							<input class="p-2 w-16 border border-navy rounded-xl bg-chalky text-livid" type="number" id="quantity" name="Quantity" min="1" value="1" required/>
							<p id="store:stock" class="text-sm text-livid">
								if len(products) >= 1 {
									if products[0].Stock != nil {
										{ fmt.Sprintf("%d unidades disponibles", *products[0].Stock) }
									}
								}
							</p>
						</div>
						<div class="space-y-2">
							<label class="block font-bold text-lg text-navy" for="product-id">Opciones:</label>
							<!-- Product select -->
							<select
								class="product-select block p-2 w-full border border-navy rounded-xl bg-chalky text-livid"
								id="product-id"
								name="Id"
								required
							>
								for _, p := range products {
									<option
										value={ fmt.Sprintf("%d", p.Id) }
										data-price={ fmt.Sprintf("US$ %.2f", float64(p.Price)/100.0) }
										if p.Stock != nil {
											data-stock={ fmt.Sprintf("%d unidades disponibles", *p.Stock) }
										}
									>{ p.Name }</option>
								}
							</select>
						</div>
						<div class="flex gap-6">
							<button class="flex-1 p-2 border border-azure rounded-3xl font-semibold text-azure" type="submit" data-action="addToCart">Agregar al carrito</button>
							<button class="flex-1 p-2 border bg-azure border-azure rounded-3xl font-semibold text-chalky" type="submit" data-action="buyNow">Comprar ahora</button>
						</div>
						<div id="error-message" class="min-h-6 font-semibold text-red-600"></div>
					</form>
					@HandleProductChange()
				</div>
				<!-- Descripcion del producto -->
				<div class="rounded-3xl shadow-[rgba(0,0,0,0.24)_0px_3px_8px] overflow-hidden lg:col-span-1">
					<!-- Navegacion -->
					<div class="flex bg-navy">
						<!-- Descripcion -->
						<div class="px-4 py-3 text-chalky font-bold text-sm">
							<svg class="inline w-8 h-8" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
								<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 3v4c0 .6-.4 1-1 1H5m4 8h6m-6-4h6m4-8v16c0 .6-.4 1-1 1H6a1 1 0 0 1-1-1V8c0-.4.1-.6.3-.8l4-4 .6-.2H18c.6 0 1 .4 1 1Z"></path>
							</svg>
							<span>Descripción</span>
						</div>
						<!-- Comentarios -->
					</div>
					<pre class="overflow-x-auto p-4">
						{ item.LongDescription }
					</pre>
				</div>
				<!-- Productos relacionados -->
			</div>
		</main>
	}
}
